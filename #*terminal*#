saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
exception: sqrt is already a declared function
let n = 2;
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
exception: sqrt is already a declared function
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
exception: sqrt is already a declared function
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
calculator008.cpp: In function ‘bool is_declared_function(std::string)’:
calculator008.cpp:63:23: error: ‘ss’ was not declared in this scope
calculator008.cpp:64:9: error: expected ‘;’ before ‘}’ token
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ 
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
exception: sqrt is already a declared function
q
;
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
exception: sqrt is already a declared function
let n = 2;
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
name: sqrt
exception: sqrt is already a declared function
q;
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
is decalred false 
exception: sqrt is already a declared function
q;
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
is decalred false 
exception: sqrt is already a declared function
q;
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
> let n = 2;
= missing in declaration of n
> let n = 2;
= missing in declaration of n
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
> Bad token
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
define function 
define function 
> sqrt(9);
function_or_variable: sqrt
taken in: (
function_or_variable t.kind: (
primary Token name: sqrt
primary Token kind: f

left brace name: 
left brace kind: 8
left brace value: 9

taken in: )
primary Token name: 
primary Token kind: )

primary expected
> Q;
Bad token
> Q;
taken in: Q
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
calculator008.cpp: In member function ‘Token Token_stream::get()’:
calculator008.cpp:105:55: error: ‘t’ was not declared in this scope
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
define function 
define function 
> sqrt(9);
function_or_variable: sqrt
taken in: (
function_or_variable t.kind: (
buffer t.name,t.kind , t.value sqrtf0
buffer t.name,t.kind , t.value sqrtf0
primary Token name: sqrt
primary Token kind: f

left brace name: 
left brace kind: 8
left brace value: 9

taken in: )
primary Token name: 
primary Token kind: )

primary expected
> Q;
taken in: Q
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
define function 
define function 
> full false-  t.name,t.kind , t.value 0
sqrt(9);
function_or_variable: sqrt
full false-  t.name,t.kind , t.value 0
taken in: (
function_or_variable t.kind: (
full false-  t.name,t.kind , t.value sqrtf0
buffer t.name,t.kind , t.value sqrtf0
full false-  t.name,t.kind , t.value sqrtf0
buffer t.name,t.kind , t.value sqrtf0
primary Token name: sqrt
primary Token kind: f

full false-  t.name,t.kind , t.value sqrtf0
left brace name: 
left brace kind: 8
left brace value: 9

full false-  t.name,t.kind , t.value sqrtf0
taken in: )
primary Token name: 
primary Token kind: )

primary expected
> full false-  t.name,t.kind , t.value sqrtf0
Q;      
taken in: Q
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
define function 
define function 
> full false-  t.name,t.kind , t.value 0
sqrt(9);
function_or_variable: sqrt
full false-  t.name,t.kind , t.value 0
taken in: (
function_or_variable t.kind: (
full false-  t.name,t.kind , t.value sqrtf0
buffer t.name,t.kind , t.value sqrtf0
full false-  t.name,t.kind , t.value sqrtf0
buffer t.name,t.kind , t.value sqrtf0
primary Token name: sqrt
primary Token kind: f

full false-  t.name,t.kind , t.value sqrtf0
left brace name: 
left brace kind: 8
left brace value: 9

full false-  t.name,t.kind , t.value sqrtf0
taken in: )
primary Token name: 
primary Token kind: )

primary expected
> full false-  t.name,t.kind , t.value sqrtf0
Q;  
taken in: Q
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
calculator008.cpp: In function ‘Token function_or_variable(std::string)’:
calculator008.cpp:97:9: error: expected ‘;’ before ‘ts’
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
calculator008.cpp:96:22: warning: missing terminating " character [enabled by default]
calculator008.cpp:96:9: error: missing terminating " character
calculator008.cpp: In function ‘Token function_or_variable(std::string)’:
calculator008.cpp:97:19: error: no match for ‘operator<<’ in ‘std::cout << ts.Token_stream::unget(Token((*(const Token*)(& t))))’
calculator008.cpp:97:19: note: candidates are:
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:106:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_C
harT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream
<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                                                                                                      
/usr/include/c++/4.7/ostream:106:7: note:   no known conversion for argument 1 from ‘void’ to ‘std::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char
>::__ostream_type&) {aka std::basic_ostream<char>& (*)(std::basic_ostream<char>&)}’                                                                                
/usr/include/c++/4.7/ostream:115:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_C
harT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT,
 _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]                                      
/usr/include/c++/4.7/ostream:115:7: note:   no known conversion for argument 1 from ‘void’ to ‘std::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::_
_ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’                                                                                                
/usr/include/c++/4.7/ostream:125:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(st
d::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]              
/usr/include/c++/4.7/ostream:125:7: note:   no known conversion for argument 1 from ‘void’ to ‘std::ios_base& (*)(std::ios_base&)’
/usr/include/c++/4.7/ostream:164:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _Char
T = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                                        
/usr/include/c++/4.7/ostream:164:7: note:   no known conversion for argument 1 from ‘void’ to ‘long int’
/usr/include/c++/4.7/ostream:168:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [w
ith _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                               
/usr/include/c++/4.7/ostream:168:7: note:   no known conversion for argument 1 from ‘void’ to ‘long unsigned int’
/usr/include/c++/4.7/ostream:172:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = 
char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                                            
/usr/include/c++/4.7/ostream:172:7: note:   no known conversion for argument 1 from ‘void’ to ‘bool’
In file included from /usr/include/c++/4.7/ostream:607:0,
                 from /usr/include/c++/4.7/iostream:40,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/bits/ostream.tcc:93:5: note: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = cha
r; _Traits = std::char_traits<char>]                                                                                                                               
/usr/include/c++/4.7/bits/ostream.tcc:93:5: note:   no known conversion for argument 1 from ‘void’ to ‘short int’
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:179:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [
with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                              
/usr/include/c++/4.7/ostream:179:7: note:   no known conversion for argument 1 from ‘void’ to ‘short unsigned int’
In file included from /usr/include/c++/4.7/ostream:607:0,
                 from /usr/include/c++/4.7/iostream:40,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/bits/ostream.tcc:107:5: note: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _T
raits = std::char_traits<char>]                                                                                                                                    
/usr/include/c++/4.7/bits/ostream.tcc:107:5: note:   no known conversion for argument 1 from ‘void’ to ‘int’
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:190:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _
CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                                    
/usr/include/c++/4.7/ostream:190:7: note:   no known conversion for argument 1 from ‘void’ to ‘unsigned int’
/usr/include/c++/4.7/ostream:199:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with 
_CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                                   
/usr/include/c++/4.7/ostream:199:7: note:   no known conversion for argument 1 from ‘void’ to ‘long long int’
/usr/include/c++/4.7/ostream:203:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned in
t) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                          
/usr/include/c++/4.7/ostream:203:7: note:   no known conversion for argument 1 from ‘void’ to ‘long long unsigned int’
/usr/include/c++/4.7/ostream:218:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT 
= char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                                          
/usr/include/c++/4.7/ostream:218:7: note:   no known conversion for argument 1 from ‘void’ to ‘double’
/usr/include/c++/4.7/ostream:222:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT =
 char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                                           
/usr/include/c++/4.7/ostream:222:7: note:   no known conversion for argument 1 from ‘void’ to ‘float’
/usr/include/c++/4.7/ostream:230:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _C
harT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                                     
/usr/include/c++/4.7/ostream:230:7: note:   no known conversion for argument 1 from ‘void’ to ‘long double’
/usr/include/c++/4.7/ostream:243:7: note: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _C
harT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]                                     
/usr/include/c++/4.7/ostream:243:7: note:   no known conversion for argument 1 from ‘void’ to ‘const void*’
In file included from /usr/include/c++/4.7/ostream:607:0,
                 from /usr/include/c++/4.7/iostream:40,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/bits/ostream.tcc:121:5: note: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _
Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char
>]                                                                                                                                                                 
/usr/include/c++/4.7/bits/ostream.tcc:121:5: note:   no known conversion for argument 1 from ‘void’ to ‘std::basic_ostream<char>::__streambuf_type* {aka std::basic_
streambuf<char>*}’                                                                                                                                                 
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:546:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsig
ned char*)                                                                                                                                                         
/usr/include/c++/4.7/ostream:546:5: note:   template argument deduction/substitution failed:
calculator008.cpp:97:19: note:   cannot convert ‘ts.Token_stream::unget(Token((*(const Token*)(& t))))’ (type ‘void’) to type ‘const unsigned char*’
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:541:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signe
d char*)                                                                                                                                                           
/usr/include/c++/4.7/ostream:541:5: note:   template argument deduction/substitution failed:
calculator008.cpp:97:19: note:   cannot convert ‘ts.Token_stream::unget(Token((*(const Token*)(& t))))’ (type ‘void’) to type ‘const signed char*’
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:528:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*
)                                                                                                                                                                  
/usr/include/c++/4.7/ostream:528:5: note:   template argument deduction/substitution failed:
calculator008.cpp:97:19: note:   cannot convert ‘ts.Token_stream::unget(Token((*(const Token*)(& t))))’ (type ‘void’) to type ‘const char*’
In file included from /usr/include/c++/4.7/ostream:607:0,
                 from /usr/include/c++/4.7/iostream:40,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/bits/ostream.tcc:323:5: note: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_Ch
arT, _Traits>&, const char*)                                                                                                                                       
/usr/include/c++/4.7/bits/ostream.tcc:323:5: note:   template argument deduction/substitution failed:
calculator008.cpp:97:19: note:   cannot convert ‘ts.Token_stream::unget(Token((*(const Token*)(& t))))’ (type ‘void’) to type ‘const char*’
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:511:5: note: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Tra
its>&, const _CharT*)                                                                                                                                              
/usr/include/c++/4.7/ostream:511:5: note:   template argument deduction/substitution failed:
calculator008.cpp:97:19: note:   mismatched types ‘const _CharT*’ and ‘void’
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:491:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned ch
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ rm calculator008clear 
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
calculator008.cpp: In member function ‘Token Token_stream::get()’:
calculator008.cpp:151:44: error: no match for ‘operator<<’ in ‘"taken in string s :" << s’
calculator008.cpp:151:44: note: candidates are:
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:546:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsig
ned char*)                                                                                                                                                         
/usr/include/c++/4.7/ostream:546:5: note:   template argument deduction/substitution failed:
calculator008.cpp:151:44: note:   mismatched types ‘std::basic_ostream<char, _Traits>’ and ‘const char [20]’
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:541:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signe
d char*)                                                                                                                                                           
/usr/include/c++/4.7/ostream:541:5: note:   template argument deduction/substitution failed:
calculator008.cpp:151:44: note:   mismatched types ‘std::basic_ostream<char, _Traits>’ and ‘const char [20]’
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:528:5: note: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*
)                                                                                                                                                                  
/usr/include/c++/4.7/ostream:528:5: note:   template argument deduction/substitution failed:
calculator008.cpp:151:44: note:   mismatched types ‘std::basic_ostream<char, _Traits>’ and ‘const char [20]’
In file included from /usr/include/c++/4.7/ostream:607:0,
                 from /usr/include/c++/4.7/iostream:40,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/bits/ostream.tcc:323:5: note: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_Ch
arT, _Traits>&, const char*)                                                                                                                                       
/usr/include/c++/4.7/bits/ostream.tcc:323:5: note:   template argument deduction/substitution failed:
calculator008.cpp:151:44: note:   mismatched types ‘std::basic_ostream<_CharT, _Traits>’ and ‘const char [20]’
In file included from /usr/include/c++/4.7/iostream:40:0,
                 from calculator008.cpp:6:
/usr/include/c++/4.7/ostream:511:5: note: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Tra
its>&, const _CharT*)                                                                                                                                              
/usr/include/c++/4.7/ostream:511:5: note:   template argument deduction/substitution failed:
calculator008.cpp:151:44: note:   mismatched types ‘std::basic_ostream<_CharT, _Traits>’ and ‘const char [20]’
In file included from /usr/include/c++/4.7/iostream:40:0,
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
define function 
define function 
> full false- t.name,t.kind , t.value 0
sqrt(9);
taken in string s :sqrt
full false- t.name,t.kind , t.value 0
taken in: (
function_or_variable t.kind: (
 IS DECLARED 
 full false- t.name,t.kind , t.value sqrtf0
buffer t.name,t.kind , t.value sqrtf0
full false- t.name,t.kind , t.value sqrtf0
buffer t.name,t.kind , t.value sqrtf0
primary Token name: sqrt
primary Token kind: f

full false- t.name,t.kind , t.value sqrtf0
left brace name: 
left brace kind: 8
left brace value: 9

full false- t.name,t.kind , t.value sqrtf0
taken in: )
primary Token name: 
primary Token kind: )

primary expected
> full false- t.name,t.kind , t.value sqrtf0
Q;
taken in: Q
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
define function 
define function 
> full false- t.name,t.kind , t.value 0
sqrt(9);
taken in string s :sqrt
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ g++ calculator008.cpp -o calculator008
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ ./calculator008
define function 
define function 
> sqrt(9);
taken in string s :sqrt
taken in: (
function_or_variable t.kind: (
 IS DECLARED 
 primary Token name: sqrt
primary Token kind: f

taken in: (
left brace name: 
left brace kind: (
left brace value: 0

primary Token name: 
primary Token kind: 8

taken in: )
right brace name: 
right brace kind: )

taken in: ;
= 3
> let n = 16;
taken in string s :let
taken in string s :n
taken in: =
function_or_variable t.kind: =
 
taken in: =
primary Token name: 
primary Token kind: 8

taken in: ;
= 16
> sqrt(n);
taken in string s :sqrt
taken in: (
function_or_variable t.kind: (
 IS DECLARED 
 primary Token name: sqrt
primary Token kind: f

taken in: (
left brace name: 
left brace kind: (
left brace value: 0

taken in string s :n
taken in: )
function_or_variable t.kind: )
 
primary Token name: n
primary Token kind: a

taken in: )
right brace name: 
right brace kind: )

taken in: ;
= 4
> sqrt(8+8);
taken in string s :sqrt
taken in: (
function_or_variable t.kind: (
 IS DECLARED 
 primary Token name: sqrt
primary Token kind: f

taken in: (
left brace name: 
left brace kind: (
left brace value: 0

primary Token name: 
primary Token kind: 8

taken in: +
primary Token name: 
primary Token kind: 8

taken in: )
right brace name: 
right brace kind: )

taken in: ;
= 4
> q;
taken in string s :q
taken in: ;
function_or_variable t.kind: ;
 
primary Token name: q
primary Token kind: a

get: undefined name q
> Q;
taken in: Q
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ gbc
No command 'gbc' found, did you mean:
 Command 'gdc' from package 'gdc' (universe)
 Command 'gc' from package 'graphviz' (main)
 Command 'bc' from package 'bc' (main)
 Command 'gwc' from package 'geneweb' (universe)
 Command 'g2c' from package 'goo' (universe)
 Command 'gbc3' from package 'gambas3-dev' (universe)
 Command 'gac' from package 'gap-dev' (universe)
 Command 'cbc' from package 'coinor-libcbc0' (universe)
 Command 'gcc' from package 'gcc' (main)
 Command 'gcc' from package 'pentium-builder' (universe)
 Command 'gcb' from package 'gcb' (universe)
 Command 'grc' from package 'grc' (universe)
 Command 'gsc' from package 'gambc' (universe)
 Command 'ghc' from package 'ghc' (universe)
gbc: command not found
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ gdc
The program 'gdc' is currently not installed. You can install it by typing:
sudo apt-get install gdc
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ gdb
GNU gdb (GDB) 7.5-ubuntu
Copyright (C) 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
(gdb) help
List of classes of commands:

aliases -- Aliases of other commands
breakpoints -- Making program stop at certain points
data -- Examining data
files -- Specifying and examining files
internals -- Maintenance commands
obscure -- Obscure features
running -- Running the program
stack -- Examining the stack
status -- Status inquiries
support -- Support facilities
tracepoints -- Tracing of program execution without stopping the program
user-defined -- User-defined commands

Type "help" followed by a class name for a list of commands in that class.
Type "help all" for the list of all commands.
Type "help" followed by command name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
(gdb) qui
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ gdb
GNU gdb (GDB) 7.5-ubuntu
Copyright (C) 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html
>                                                                          
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
(gdb) run calculator008
Starting program:  calculator008
No executable file specified.
Use the "file" or "exec-file" command.
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) quit
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ gdb
GNU gdb (GDB) 7.5-ubuntu
Copyright (C) 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html
>                                                                          
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
(gdb) quit
saad@saad-Inspiron-N5030 ~/Documents/cplusplus $ gdb calculator008
GNU gdb (GDB) 7.5-ubuntu
Copyright (C) 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html
>                                                                          
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /home/saad/Documents/cplusplus/calculator008...(no debu
gging symbols found)...done.                                               
(gdb) run
Starting program: /home/saad/Documents/cplusplus/calculator008 
define function 
define function 
> 